apiVersion: v1
kind: Service           # Step 1: Create Service
metadata: 
  name: websrv-main
#  namespace: websrv
spec:
  selector:
    app: websrv-main
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap         # Step 2: Create nginx config          
metadata:
  name: websrv-config-home
#  namespace: websrv 
data:
  nginx.conf: |
    # For more information on configuration, see:
    #   * Official English Documentation: http://nginx.org/en/docs/
    #   * Official Russian Documentation: http://nginx.org/ru/docs/
    
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    
    # Load dynamic modules. See /usr/share/nginx/README.dynamic.
    #include /usr/share/nginx/modules/*.conf;
    
    events {
        worker_connections 1024;
    }
    
    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
    
        access_log  /var/log/nginx/access.log  main;
    
        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_timeout   65;
        types_hash_max_size 2048;
    
        #include             /etc/nginx/mime.types;
        default_type        application/octet-stream;
    
        # Load modular configuration files from the /etc/nginx/conf.d directory.
        # See http://nginx.org/en/docs/ngx_core_module.html#include
        # for more information.
        include /etc/nginx/conf.d/*.conf;
    
        server {
   
           listen       80 default_server;
           listen       [::]:80 default_server;
           server_name  _;
           root         /usr/share/nginx/html;
           
           # Load configuration files for the default server block.
           include /etc/nginx/default.d/*.conf;
           
           location / {
           }
           
           error_page 404 /404.html;
               location = /40x.html {
           }
           
           error_page 500 502 503 504 /50x.html;
               location = /50x.html {
           }
        }
    }
---
apiVersion: v1
kind: ConfigMap         # Step 3: Create nginx home page index.html
metadata:
  name: websrv-homepage
#  namespace: websrv 
data:
  index.html: |
    <html>
    <head><title>K3S! - Home</title>
      <style>
        html {
          font-size: 62.5%;
        }
        body {
          font-family: sans-serif;
          background-color: pink;
          color: white;
          display: flex;
          flex-direction: column;
          justify-content: center;
          height: 100vh;
        }
        div {
          text-align: center;
          font-size: 8rem;
          text-shadow: 3px 3px 4px dimgrey;
        }
      </style>
    </head>
    <body>
      <div>Hello from K3S! - Home</div>
    </body>
    </html>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websrv-main
  labels: 
    app: websrv-main
# namespace: websrv
spec:
  replicas: 1
  selector:
    matchLabels:
      app: websrv-main
  template:
    metadata:
      labels:
        app: websrv-main
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config-home
          mountPath: /etc/nginx/
          readOnly: true
        - name: homepage
          mountPath: /usr/share/nginx/html/
      volumes:
      - name: config-home
        configMap:
          name: websrv-config-home
      - name: homepage
        configMap:
          name: websrv-homepage
